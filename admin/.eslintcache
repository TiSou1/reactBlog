[{"D:\\reactBlog\\admin\\src\\index.js":"1","D:\\reactBlog\\admin\\src\\reportWebVitals.js":"2","D:\\reactBlog\\admin\\src\\pages\\main.js":"3","D:\\reactBlog\\admin\\src\\pages\\login.js":"4","D:\\reactBlog\\admin\\src\\pages\\adminIndex.js":"5","D:\\reactBlog\\admin\\src\\pages\\addArticle.js":"6","D:\\reactBlog\\admin\\src\\config\\aipUrl.js":"7","D:\\reactBlog\\admin\\src\\pages\\articleList.js":"8","D:\\reactBlog\\admin\\src\\pages\\userInfo.js":"9","D:\\reactBlog\\admin\\src\\pages\\userUpdate.js":"10","D:\\reactBlog\\admin\\src\\pages\\userAdd.js":"11"},{"size":493,"mtime":1610503969503,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609940271683,"results":"14","hashOfConfig":"13"},{"size":511,"mtime":1610025651090,"results":"15","hashOfConfig":"13"},{"size":3193,"mtime":1610613926345,"results":"16","hashOfConfig":"13"},{"size":6217,"mtime":1611201410113,"results":"17","hashOfConfig":"13"},{"size":10102,"mtime":1610701685159,"results":"18","hashOfConfig":"13"},{"size":748,"mtime":1611203906479,"results":"19","hashOfConfig":"13"},{"size":3491,"mtime":1611205170569,"results":"20","hashOfConfig":"13"},{"size":3384,"mtime":1611148961989,"results":"21","hashOfConfig":"13"},{"size":2088,"mtime":1611147576341,"results":"22","hashOfConfig":"13"},{"size":1452,"mtime":1611204928616,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vv2u9z",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"D:\\reactBlog\\admin\\src\\index.js",[],["52","53"],"D:\\reactBlog\\admin\\src\\reportWebVitals.js",[],"D:\\reactBlog\\admin\\src\\pages\\main.js",[],"D:\\reactBlog\\admin\\src\\pages\\login.js",[],"D:\\reactBlog\\admin\\src\\pages\\adminIndex.js",["54","55"],"import React, { useState } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport '../static/css/adminIndex.css'\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Route, Link } from 'react-router-dom';\r\nimport AddArticle from './addArticle';\r\nimport ArticleList from './articleList';\r\nimport UserInfo from './userInfo';\r\nimport UserUpdate from \"./userUpdate\";\r\nimport UserAdd from './userAdd';\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction AdminIndex(props) {\r\n\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const [path, setPath] = useState([]);//当前路径\r\n\r\n\r\n\r\n    const onCollapse = collapsed => {\r\n        // console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n\r\n    const pathSetting = (pathList, path) => {\r\n        let pathObject = pathList.map(item => {\r\n            return { num: item, opera: path }\r\n        })\r\n        setPath(pathObject);\r\n    }\r\n    let pathSource = {\r\n        articleAdd: '文章管理/添加文章',\r\n        articleList: '文章管理/文章列表',\r\n        userAdd: '管理员/管理员添加',\r\n        userList:'管理员/管理员列表',\r\n    }\r\n    const handleClickArticle = e => {\r\n        if (e.key == 'addArticle') {\r\n            props.history.push('/index/add');\r\n            let pathList = pathSource.articleAdd.split('/');\r\n            pathSetting(pathList, '/index/add');\r\n        } else {\r\n            props.history.push('/index/list');\r\n            let pathList = pathSource.articleList.split('/');\r\n            pathSetting(pathList, '/index/list');\r\n        }\r\n    }\r\n    //管理员用户\r\n    const handleClickUserInfo = (e) => {\r\n        console.log(e.key);\r\n        if(e.key == 'userAdd'){\r\n            props.history.push('/index/user/add');\r\n            //加上filter去除空的\r\n            let pathList = pathSource.userAdd.split('/').filter(i => i);\r\n            pathSetting(pathList, '/index/user/add');\r\n        }else{\r\n            props.history.push('/index/user/list');\r\n            //加上filter去除空的\r\n            let pathList = pathSource.userList.split('/').filter(i => i);\r\n            pathSetting(pathList, '/index/user/list');\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n                <div className=\"logo\">博客后台管理</div>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"controller\" icon={<PieChartOutlined />}>\r\n                        控制台\r\n                     </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"article\"\r\n                        onClick={handleClickArticle}\r\n                        icon={<FileOutlined />}\r\n                        title={<span>\r\n                            文章管理\r\n                    </span>}>\r\n                        <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\r\n                        <Menu.Item key=\"articleList\">文章列表</Menu.Item>\r\n                    </SubMenu>\r\n                    {/* 用户 */}\r\n                    <SubMenu\r\n                        key='user'\r\n                        icon={<UserOutlined />}\r\n                        title={<span>\r\n                              User\r\n                         </span>}>\r\n                        <Menu.Item\r\n                            onClick={handleClickUserInfo}\r\n                            key=\"userAdd\">\r\n                            添加管理员\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            onClick={handleClickUserInfo}\r\n                            key=\"userList\"> \r\n                            管理员列表\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n                <Content style={{ margin: '0 16px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n                        {\r\n                            path.map((item, index) => {\r\n                                return (\r\n                                    <Breadcrumb.Item key={index}>\r\n                                        <Link to={{\r\n                                            pathname: item.opera\r\n                                        }}> {item.num}</Link>\r\n                                    </Breadcrumb.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* <Breadcrumb.Item>\r\n                            <a href='/index/'>{path.type}</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <a href='/index/list/'>{path.operater}</a>\r\n                        </Breadcrumb.Item> */}\r\n                    </Breadcrumb>\r\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                        <div>\r\n                            <Route path=\"/index/\" exact component={AddArticle} />\r\n                            <Route path=\"/index/add\" exact component={AddArticle} />\r\n                            <Route path=\"/index/list\" exact component={ArticleList} />\r\n                            <Route path=\"/index/add/:id\" exact component={AddArticle} />\r\n                            <Route path=\"/index/user/list\" exact component={UserInfo} />\r\n                            <Route path=\"/index/user/update/:name\" exact component={UserUpdate} />\r\n                            <Route path=\"/index/user/add\" component={UserAdd}/>\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default AdminIndex\r\n","D:\\reactBlog\\admin\\src\\pages\\addArticle.js",["56","57","58","59","60","61","62"],"import React, { useState,useEffect } from 'react';\r\nimport marked  from 'marked'\r\nimport '../static/css/addArticle.css';\r\nimport { Row, Col, Input, Select, Button, DatePicker, message } from 'antd';\r\nimport axios from 'axios';\r\nimport servicePath from '../config/aipUrl';\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nfunction AddArticle(props) {\r\n    const [articleId,setArticleId] = useState(0);//文章id,如果为0表示新增加,如果不是则表示修改\r\n    const [articleTitle,setArticleTitle] = useState('');//文章标题\r\n    const [markdownContent,setMarkdownContent] = useState('');//文章内容\r\n    const [htmlContent,setHtmlContent] = useState('预览内容');//markdow解析后的预览内容\r\n    const [markdownIntroduce,setMarkdownIntroduce] = useState();//简介的md\r\n    const [htmlIntroduce,setHtmlIntroduce] = useState('等待编辑');//md解析后的预览\r\n    const [showDate,setShowDate] = useState();//发布日期\r\n    const [updateDate,setUpdateDate] = useState();//修改日期\r\n    const [typeInfo,setTypeInfo] = useState([]);//文章类别\r\n    const [selectType,setSelectType] = useState('选择类型');//选择文章航类别(目前数据库存了3类)\r\n   \r\n    useEffect(()=>{\r\n        getTypeInfo();\r\n        \r\n        //获取文章id,从上一个路由传递归来articleList.js到adminIndex中的路由,再到addArticle组件接收id参数\r\n        let temId = props.match.params.id;\r\n        if(temId){\r\n            setArticleId(temId);\r\n            getArticleById(temId);\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n    // marked配置\r\n    marked.options({\r\n        renderer:new marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists:true,\r\n        smartypants: false,\r\n    });\r\n    // 内容区触发方法\r\n    const changeContent = (e)=>{\r\n        let {value} = e.target\r\n        setMarkdownContent(value);\r\n        let html = marked(value);\r\n        setHtmlContent(html);\r\n    }\r\n    // 简介区触发方法\r\n    const changeIntroduce = (e)=>{\r\n        let {value} = e.target;\r\n        setMarkdownIntroduce(value);\r\n        let html = marked(value);\r\n        setHtmlIntroduce(html);\r\n    }\r\n    //获得文章类型\r\n    const getTypeInfo = ()=>{\r\n        //console.log(localStorage.getItem('openId'));\r\n        axios({\r\n            method:'get',\r\n            url:servicePath.getTypeInfo,\r\n            withCredentials:true,//可跨域\r\n            header:{ 'Access-Control-Allow-Origin':'*' }\r\n        }).then(res=>{\r\n            //这里的\"没有登录是中台路由守护adminauth.js返回的\r\n            if(res.data.data === '未登录'){\r\n                localStorage.removeItem('openId');\r\n                props.history.push('/');//跳转到首页\r\n            }else{\r\n                setTypeInfo(res.data.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    //发布文章方法\r\n    const saveArticle = ()=>{\r\n        if(!selectType || selectType=='选择类型'){\r\n            message.error('请选择文章类型');\r\n            return false;\r\n        }else if(!articleTitle){\r\n            message.error('请输入文章标题');\r\n            return false;\r\n        }else if(!markdownContent){\r\n            message.error('请输入文章内容');\r\n            return false;\r\n        }else if(!markdownIntroduce){\r\n            message.error('请输入文章简介');\r\n            return false;\r\n        }\r\n        else if(!showDate){\r\n            message.error('请选择文章发布日期');\r\n            return false;\r\n        }\r\n        //传递到接口的参数\r\n        let dataProps = {\r\n            type_id: selectType,\r\n            title: articleTitle,\r\n            article_content: markdownContent,\r\n            introduce: markdownIntroduce,\r\n        }\r\n        let dateTxt = showDate.replace('-','/');//将字符串转换为事件戳\r\n        dataProps.addTime = (new Date(dateTxt).getTime())/1000;\r\n       \r\n        //判断时新增文章,还是修改文章\r\n        if(articleId == 0){\r\n            console.log(\"新增文章...\");\r\n            axios({\r\n                method: 'post',\r\n                url: servicePath.addArticle,\r\n                data: dataProps,\r\n                withCredentials: true,//允许cookie跨域\r\n            }).then(res=>{\r\n                //设置Id,\r\n                setArticleId(res.data.insertId);\r\n                if(res.data.isSuccess)\r\n                    message.success(\"发布成功\");\r\n                else \r\n                    message.error('发布失败');           \r\n            })\r\n        }else{//发布成功后,再点击发布,就会是对刚发布的修改\r\n             console.log('修改文章...')\r\n             console.log(\"artcleId:\",articleId);\r\n             dataProps.id = articleId;\r\n             axios({\r\n                 method: 'post',\r\n                 url:servicePath.updateArticle,\r\n                 data:dataProps,\r\n                 withCredentials: true\r\n             }).then(res=>{\r\n                 if(res.data.isSuccess){\r\n                     message.success('修改成功');\r\n                 }else{\r\n                     message.error('保存失败');\r\n                 }\r\n             })\r\n        }\r\n     \r\n    }\r\n\r\n    //获取文章通过id,然后显示出来,方便修改\r\n    const getArticleById = (id)=>{\r\n        axios(servicePath.getArticleById+id,{withCredentials:true})\r\n            .then(res=>{\r\n                if(res.data.status == 0){\r\n                    //查找失败\r\n                    message.error('查找失败');\r\n                    return false;\r\n                }else{\r\n                    console.log(res);\r\n                    let articleInfo = res.data.data[0];\r\n                    setArticleTitle(articleInfo.title);\r\n                    setMarkdownContent(articleInfo.article_content);\r\n                    //将内容预览区也填充数据\r\n                    setHtmlContent(marked(articleInfo.article_content));\r\n                    setMarkdownIntroduce(articleInfo.introduce);\r\n                    //将简介预览区也填充数据\r\n                    setHtmlIntroduce(marked(articleInfo.introduce));\r\n                    setShowDate(articleInfo.addTime);\r\n                    setSelectType(articleInfo.typeId);\r\n                }\r\n             \r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                {/* 第一列 */}\r\n                <Col span={18}>\r\n                    {/* 头部 */}\r\n                    <Row gutter={10}>\r\n                        <Col span={20}>\r\n                            <Input\r\n                                value={articleTitle}\r\n                                onChange={e=>setArticleTitle(e.target.value)}\r\n                                placeholder=\"博客标题\"\r\n                                size=\"large\"\r\n                            />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Select defaultValue={selectType} value={selectType} size=\"large\" onChange={(value)=>setSelectType(value)}>\r\n                                {/* defaultValue和value的值一样,显示\"视频教程\"\" */}\r\n                                {\r\n                                    typeInfo.map((item,index)=>{\r\n                                        return (<Option key={index} value={item.Id}>{item.typeName}</Option>)\r\n                                    })\r\n                                }\r\n                                \r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                   \r\n                    {/* 中部 内容区 */}\r\n                    <Row gutter={10} className=\"mid-area\">\r\n                        {/* markdown内容 */}\r\n                        <Col span={12}>\r\n                            <TextArea\r\n                            className=\"markdown-content\"\r\n                            value = {markdownContent}\r\n                            rows={35}\r\n                            placeholder=\"文章内容\"\r\n                            onChange={changeContent}/>\r\n                        </Col>\r\n                        {/* 解析后的内容 */}\r\n                        <Col span={12}>\r\n                            <div className=\"show-html\"\r\n                            dangerouslySetInnerHTML={{__html:htmlContent}}>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                {/* 第二列 */}\r\n                <Col span={6}>\r\n                    <Row gutter={5}>\r\n                        <Col span={24}>\r\n                            <Button size=\"large\">暂存文章</Button>\r\n                            <Button \r\n                            type=\"primary\" \r\n                            size=\"large\" \r\n                            className=\"publish-button\" \r\n                            onClick={saveArticle}\r\n                            >发布文章</Button>\r\n                        </Col>\r\n                        <Col span={24} className=\"introduce\">\r\n                            <TextArea \r\n                            rows={4} \r\n                            value={markdownIntroduce}\r\n                            placeholder=\"文章简介\" \r\n                            onChange={changeIntroduce}></TextArea>\r\n                            <div className=\"introduce-html\" dangerouslySetInnerHTML={{__html:htmlIntroduce}}></div>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <div className=\"date-select\">\r\n                            <DatePicker\r\n                            onChange={(date,dateString)=>setShowDate(dateString)}\r\n                            placeholder=\"日期选择\"\r\n                            size=\"large\"/>\r\n                          </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle","D:\\reactBlog\\admin\\src\\config\\aipUrl.js",[],"D:\\reactBlog\\admin\\src\\pages\\articleList.js",["63"],"import React, {useState, useEffect} from 'react';\r\nimport '../static/css/articleList.css';\r\nimport { List, Row, Col, Modal, message, Button, Switch } from \"antd\";\r\nimport axios from 'axios';\r\nimport servicePath from '../config/aipUrl';\r\nimport '../static/css/getArticleList.css'\r\nconst {confirm} = Modal;\r\n\r\n\r\nfunction ArticleList(props){\r\n    const [list,setList] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getList();//调用一次\r\n    },[])\r\n\r\n    \r\n    //获取文章列表\r\n    const getList = ()=>{\r\n        axios({\r\n            method:'get',\r\n            url: servicePath.getArticleList,\r\n            withCredentials:true,\r\n            header:{ 'Access-Control-Allow-Origin':'*' }\r\n        }).then(res=>{\r\n            setList(res.data.list);\r\n        })\r\n    }\r\n    //删除文章列表\r\n    const delArticle = (id,index)=>{\r\n        confirm({\r\n            title:'确定要删除此文章吗?',\r\n            content:'确认删除,将无法恢复...',\r\n            onOk(){\r\n                axios(servicePath.delArticle + id,{withCredentials:true})\r\n                    .then(res=>{\r\n                        message.success('删除成功');\r\n                        //从index开始,删除一个元素,也就是删除index位置元素\r\n                        list.splice(index,1);\r\n                        setList([...list]);\r\n                    })\r\n            },\r\n            onCancel(){\r\n                message.info('取消成功')\r\n            }\r\n        })\r\n    }\r\n    //查找id\r\n    const updateArticle = (id)=>{\r\n        props.history.push(`/index/add/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <List\r\n                header={\r\n                    <Row className='list-div'>\r\n                        <Col span={8}>\r\n                            <b>标题{`(共计${list.length}篇)`}</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>类别</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>发布时间</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>访问数</b>\r\n                        </Col>\r\n                      \r\n                        <Col span={4}>\r\n                            <b>操作</b>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={list}\r\n                renderItem={(item,index)=>(\r\n                    <List.Item>\r\n                         <Row className='list-div'>\r\n                        <Col span={8}>\r\n                           {item.title}\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            {item.typeName}\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            {item.addTime}\r\n                        </Col>\r\n                        <Col span={4}>\r\n                           {item.view_count}\r\n                        </Col>\r\n                        <Col span={4}>\r\n                           <Button type=\"primary\" onClick={()=>updateArticle(item.id)}>修改</Button>&nbsp;\r\n                           <Button type=\"\" onClick={()=>delArticle(item.id,index)}>删除</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleList","D:\\reactBlog\\admin\\src\\pages\\userInfo.js",[],"D:\\reactBlog\\admin\\src\\pages\\userUpdate.js",["64"],"import React,{useState}from \"react\";\r\nimport { List, Row, Col, Button, Input, message} from 'antd';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport servicePath  from '../config/aipUrl';\r\nimport '../static/css/updateUser.css';\r\nconst UserUpdate = (props) => {\r\n    let user = props.location.state;\r\n    const [userName,setUserName] = useState(user.userName);\r\n    const [password,serPassword] = useState(user.password);\r\n   \r\n    const updateUser = ()=>{\r\n        //发起axios请求,进行密码修改\r\n        let id = user.Id;\r\n        let dataProps = {\r\n            //es6写法\r\n            userName,\r\n            password,\r\n        }\r\n        axios({\r\n            method:'post',\r\n            url: servicePath.updateUser+id,\r\n            data:dataProps,\r\n            withCredentials:true,\r\n            header:{ 'Access-Control-Allow-Origin':'*' }\r\n        }).then(res=>{\r\n            if(res.data.isSuccess)\r\n                message.success('修改成功')\r\n                props.history.push('/index/user');\r\n        })\r\n    }\r\n    return (\r\n        <div className='userUpdate'>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Input\r\n                        size='large'\r\n                        onChange={e=>setUserName(e.target.value)}\r\n                        value={userName}\r\n                        placeholder='输入用户名'                     \r\n                        prefix={< UserOutlined />} />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input\r\n                        size='large'\r\n                        onChange={e=>serPassword(e.target.value)}\r\n                        value={password}\r\n                        placeholder='输入密码'\r\n                        prefix={< KeyOutlined />} />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Button size='large' type='primary' onClick={updateUser}>确认修改</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserUpdate","D:\\reactBlog\\admin\\src\\pages\\userAdd.js",["65"],"import React,{useState,useEffect} from 'react';\r\nimport '../static/css/userAdd.css';\r\nimport {message} from 'antd'\r\nimport axios from 'axios';\r\nimport servicePath from '../config/aipUrl';\r\n\r\n\r\nfunction  UserAdd(props) {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    //输入框值\r\n    const userNameChange = (e)=>{\r\n        setUserName(e.target.value);\r\n    }\r\n    const passwordChange = e =>{\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    //传递到接口的数据\r\n    let dataProps = {\r\n        userName,\r\n        password,\r\n    }\r\n    const addUser = ()=>{\r\n        setUserName('');\r\n        setPassword('');\r\n        axios({\r\n            method:'post',\r\n            url:servicePath.addUser,\r\n            data:dataProps,\r\n            withCredentials:true,\r\n        })\r\n            .then(res=>{\r\n                if(res.data.status)\r\n                    message.success('添加成功');\r\n                else  \r\n                    message.warning('似乎出现了一点问题...');\r\n            })\r\n    }\r\n    return(\r\n        <div className='userAdd'>\r\n           <input type='text' placeholder='输入用户名' value={userName} onChange={userNameChange}/>\r\n           <input type='password' placeholder='输入密码' value={password} onChange={passwordChange}/>\r\n           <button onClick={addUser}>添加用户</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserAdd;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":46,"column":19,"nodeType":"72","messageId":"73","endLine":46,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":59,"column":18,"nodeType":"72","messageId":"73","endLine":59,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":24,"column":12,"nodeType":"76","messageId":"77","endLine":24,"endColumn":22},{"ruleId":"74","severity":1,"message":"79","line":24,"column":23,"nodeType":"76","messageId":"77","endLine":24,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":37,"column":7,"nodeType":"82","endLine":37,"endColumn":9,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"71","line":87,"column":37,"nodeType":"72","messageId":"73","endLine":87,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":115,"column":22,"nodeType":"72","messageId":"73","endLine":115,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":154,"column":36,"nodeType":"72","messageId":"73","endLine":154,"endColumn":38},{"ruleId":"74","severity":1,"message":"84","line":3,"column":50,"nodeType":"76","messageId":"77","endLine":3,"endColumn":56},{"ruleId":"74","severity":1,"message":"85","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"86","line":1,"column":24,"nodeType":"76","messageId":"77","endLine":1,"endColumn":33},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'updateDate' is assigned a value but never used.","'setUpdateDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTypeInfo' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["89"],"'Switch' is defined but never used.","'List' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [getTypeInfo, props.match.params.id]",{"range":"92","text":"93"},[1373,1375],"[getTypeInfo, props.match.params.id]"]